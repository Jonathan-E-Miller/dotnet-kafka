version: '3.4'

services:
  apiproducer:
    image: ${DOCKER_REGISTRY-}apiproducer
    build:
      context: .
      dockerfile: ApiProducer/Dockerfile
    ports:
      - "8001:443"
    depends_on:
      - kafka
      - seq
      - mongodb_container

  mvcconsumer:
    image: ${DOCKER_REGISTRY-}mvcconsumer
    build:
      context: .
      dockerfile: MvcConsumer/Dockerfile
    ports:
      - "8002:443"
    depends_on:
      - kafka
      - seq
      - mongodb_container

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  seq:
    image: datalust/seq:latest
    restart: unless-stopped
    ports: 
      - "5342:80"
    environment:
      - ACCEPT_EULA=Y

  mongodb_container:
    image: mongo:latest
    container_name: mongo_container
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27017:27017
